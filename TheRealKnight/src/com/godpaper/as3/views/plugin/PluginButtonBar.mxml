<?xml version="1.0" encoding="utf-8"?>
<s:ButtonBar xmlns:fx="http://ns.adobe.com/mxml/2009"
			 xmlns:s="library://ns.adobe.com/flex/spark"
			 xmlns:mx="library://ns.adobe.com/flex/mx"
			 width="100%"
			 height="50"
			 requireSelection="true"
			 skinClass="com.godpaper.as3.views.plugin.PluginButtonBarSkin"
			 change="changeHandler(event)"
			 xmlns:parsley="http://www.spicefactory.org/parsley"
			 creationComplete="creationCompleteHandler(event)"
			 >
	<s:dataProvider>
		<s:ArrayList>
			<fx:Object label="baby"
					   toolTip="{gcTollgateTips}"
					   enabled="true"
					   icon="{DefaultEmbededAssets.ICON_TOLLGATE_01}"/>
			<fx:Object label="store"
					   toolTip="store"
					   enabled="true"
					   icon="{DefaultEmbededAssets.ICON_STORE}"/>
			<fx:Object label="leadboard"
					   toolTip="leader board"
					   enabled="true"
					   icon="{DefaultEmbededAssets.ICON_COIN}"/>
			<fx:Object label="account"
					   toolTip="account login"
					   enabled="true"
					   icon="{DefaultEmbededAssets.ICON_ACCOUNT}"/>
		</s:ArrayList>
	</s:dataProvider>
	<fx:Script>
		<![CDATA[
			import assets.DefaultEmbededAssets;
			
			import com.godpaper.as3.configs.GameConfig;
			import com.godpaper.as3.consts.DefaultTollgatesConstant;
			import com.godpaper.as3.messages.LevelUpMessage;
			import com.godpaper.as3.plugins.IPlug;
			
			import mx.core.FlexGlobals;
			import mx.events.FlexEvent;
			
			import spark.components.ButtonBarButton;
			import spark.events.IndexChangeEvent;
			//--------------------------------------------------------------------------
			//
			//  Variables
			//
			//--------------------------------------------------------------------------
			//Internal variables
			[Bindable]private var gcTollgateTips:String = GameConfig.tollgates[0].tips;
			//--------------------------------------------------------------------------
			//
			//  Public methods
			//
			//--------------------------------------------------------------------------
			//parsley message handler
			[MessageHandler]
			public function levelUpHandler(message:LevelUpMessage):void
			{
				var btnBarBtn:ButtonBarButton=this.dataGroup.getElementAt(0) as ButtonBarButton;
				btnBarBtn.skin["iconImage"]["source"]=GameConfig.tollgates[GameConfig.gameStateManager.level].icon;
				btnBarBtn.toolTip = GameConfig.tollgates[GameConfig.gameStateManager.level].tips;
			}
			//--------------------------------------------------------------------------
			//
			//  Protected methods
			//
			//--------------------------------------------------------------------------
			//
			protected function creationCompleteHandler(event:FlexEvent):void
			{
				
				
			}
			//
			protected function changeHandler(event:IndexChangeEvent):void
			{
				// TODO Auto-generated method stub
				switch (event.newIndex)
				{
					case 0: //tollgate
						iPlug.showData();
						break;
					case 1: //store
						iPlug.showStore();
						break;
					case 2: //coin,leadboard
						iPlug.showLeaderboard({boardID: iPlug.data.boardID});
						break;
					case 3: //account
						//
						iPlug.showLoginWidget();
						break;
					default:
						break;
				}
			}
			//
			protected function get iPlug():IPlug
			{
				return IPlug(FlexGlobals.topLevelApplication.pluginUIComponent.provider);
			}
		]]>
	</fx:Script>
	<fx:Declarations>
		<!-- Place non-visual elements (e.g., services, value objects) here -->
		<parsley:Configure>
		</parsley:Configure>
	</fx:Declarations>
</s:ButtonBar>
